{
  "info": {
    "name": "DropMyBeats API",
    "description": "Complete API collection for DropMyBeats backend with Role-Based Access Control",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000/api",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "guestToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "eventId",
      "value": "",
      "type": "string"
    },
    {
      "key": "songRequestId",
      "value": "",
      "type": "string"
    },
    {
      "key": "MemberId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Test\",\n  \"lastName\": \"User\",\n  \"email\": \"test@example.com\",\n  \"password\": \"Test123!\",\n  \"role\": \"Member\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('authToken', response.token);",
                  "    pm.collectionVariables.set('userId', response.data._id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@dropmybeats.com\",\n  \"password\": \"Admin123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('authToken', response.token);",
                  "    pm.collectionVariables.set('userId', response.data._id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Guest Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"guest@example.com\",\n  \"firstName\": \"Guest\",\n  \"lastName\": \"User\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/guest-login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "guest-login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('guestToken', response.token);",
                  "    pm.collectionVariables.set('userId', response.data._id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "me"]
            }
          }
        },
        {
          "name": "Update Profile",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Updated\",\n  \"lastName\": \"Name\",\n  \"phoneNumber\": \"+1987654321\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/profile",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "profile"]
            }
          }
        },
        {
          "name": "Change Password",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"Admin123!\",\n  \"newPassword\": \"NewAdmin123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/change-password",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "change-password"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "Admin Dashboard",
      "item": [
        {
          "name": "Get Admin Dashboard",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/dashboard",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "dashboard"]
            }
          }
        },
        {
          "name": "Get All Managers",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/managers",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "managers"]
            }
          }
        },
        {
          "name": "Get System Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/analytics",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "analytics"]
            }
          }
        }
      ]
    },
    {
      "name": "Manager Dashboard",
      "item": [
        {
          "name": "Get Manager Dashboard",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/manager/dashboard",
              "host": ["{{baseUrl}}"],
              "path": ["manager", "dashboard"]
            }
          }
        },
        {
          "name": "Get Manager Events",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/manager/events",
              "host": ["{{baseUrl}}"],
              "path": ["manager", "events"]
            }
          }
        },
        {
          "name": "Get Event Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/manager/events/{{eventId}}/analytics",
              "host": ["{{baseUrl}}"],
              "path": ["manager", "events", "{{eventId}}", "analytics"]
            }
          }
        }
      ]
    },
    {
      "name": "Member Dashboard",
      "item": [
        {
          "name": "Get Member Dashboard",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/member/dashboard",
              "host": ["{{baseUrl}}"],
              "path": ["member", "dashboard"]
            }
          }
        },
        {
          "name": "Get Member Events",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/member/events",
              "host": ["{{baseUrl}}"],
              "path": ["member", "events"]
            }
          }
        },
        {
          "name": "Get Member Song Requests",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/member/song-requests",
              "host": ["{{baseUrl}}"],
              "path": ["member", "song-requests"]
            }
          }
        }
      ]
    },
    {
      "name": "Guest Dashboard",
      "item": [
        {
          "name": "Get Guest Dashboard",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/guest/dashboard",
              "host": ["{{baseUrl}}"],
              "path": ["guest", "dashboard"]
            }
          }
        },
        {
          "name": "Get Guest Events",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/guest/events",
              "host": ["{{baseUrl}}"],
              "path": ["guest", "events"]
            }
          }
        },
        {
          "name": "Get Guest Song Requests",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/guest/song-requests",
              "host": ["{{baseUrl}}"],
              "path": ["guest", "song-requests"]
            }
          }
        }
      ]
    },
    {
      "name": "Person Management",
      "item": [
        {
          "name": "Get All Persons",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/persons?page=1&limit=10&role=Member",
              "host": ["{{baseUrl}}"],
              "path": ["persons"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "role",
                  "value": "Member"
                }
              ]
            }
          }
        },
        {
          "name": "Get Single Person",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/persons/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["persons", "{{userId}}"]
            }
          }
        },
        {
          "name": "Create Person (Admin Only)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"New\",\n  \"lastName\": \"Person\",\n  \"email\": \"newperson@example.com\",\n  \"password\": \"NewPerson123!\",\n  \"role\": \"Member\",\n  \"phoneNumber\": \"+1555666777\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/persons",
              "host": ["{{baseUrl}}"],
              "path": ["persons"]
            }
          }
        },
        {
          "name": "Update Person (Admin Only)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"Updated\",\n  \"role\": \"Manager\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/persons/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["persons", "{{userId}}"]
            }
          }
        },
        {
          "name": "Delete Person (Admin Only)",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/persons/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["persons", "{{userId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Event Management",
      "item": [
        {
          "name": "Get All Events",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/events?page=1&limit=10&isPublic=true",
              "host": ["{{baseUrl}}"],
              "path": ["events"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "isPublic",
                  "value": "true"
                }
              ]
            }
          }
        },
        {
          "name": "Get Single Event",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('eventId', response.data._id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Event (Manager/Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Event\",\n  \"description\": \"This is a test event created via Postman\",\n  \"startDate\": \"2024-12-31T20:00:00Z\",\n  \"endDate\": \"2024-12-31T23:59:00Z\",\n  \"venue\": {\n    \"name\": \"Test Venue\",\n    \"address\": \"123 Test St\",\n    \"city\": \"Test City\",\n    \"state\": \"TS\",\n    \"zipCode\": \"12345\"\n  },\n  \"maxMembers\": 100,\n  \"isPublic\": true,\n  \"requiresApproval\": false,\n  \"maxSongsPerUser\": 5,\n  \"allowDuplicates\": false,\n  \"timeBombEnabled\": true,\n  \"timeBombDuration\": 300\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/events",
              "host": ["{{baseUrl}}"],
              "path": ["events"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('eventId', response.data._id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Update Event",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Test Event\",\n  \"description\": \"This event has been updated\",\n  \"maxMembers\": 150\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}"]
            }
          }
        },
        {
          "name": "Activate Event",
          "request": {
            "method": "PUT",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}/activate",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}", "activate"]
            }
          }
        },
        {
          "name": "Deactivate Event",
          "request": {
            "method": "PUT",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}/deactivate",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}", "deactivate"]
            }
          }
        },
        {
          "name": "Join Event",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}/join",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}", "join"]
            }
          }
        },
        {
          "name": "Join Event as Guest (No Auth)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"guest@example.com\",\n  \"firstName\": \"Guest\",\n  \"lastName\": \"User\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}/join-guest",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}", "join-guest"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('MemberId', response.data.Member._id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Leave Event",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}/leave",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}", "leave"]
            }
          }
        },
        {
          "name": "Get Event Members",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}/Members",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}", "Members"]
            }
          }
        },
        {
          "name": "Get Event Guest Members",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}/guest-Members",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}", "guest-Members"]
            }
          }
        },
        {
          "name": "Delete Event",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Song Requests",
      "item": [
        {
          "name": "Get Event Song Requests",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}/song-requests?status=pending&page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}", "song-requests"],
              "query": [
                {
                  "key": "status",
                  "value": "pending"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Create Song Request",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Song\",\n  \"artist\": \"Test Artist\",\n  \"album\": \"Test Album\",\n  \"genre\": \"Pop\",\n  \"duration\": 180,\n  \"spotifyId\": \"test123\",\n  \"message\": \"Please play this song!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}/song-requests",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}", "song-requests"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('songRequestId', response.data._id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Single Song Request",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}/song-requests/{{songRequestId}}",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}", "song-requests", "{{songRequestId}}"]
            }
          }
        },
        {
          "name": "Update Song Request",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated Test Song\",\n  \"priority\": 8\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}/song-requests/{{songRequestId}}",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}", "song-requests", "{{songRequestId}}"]
            }
          }
        },
        {
          "name": "Like Song Request",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}/song-requests/{{songRequestId}}/like",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}", "song-requests", "{{songRequestId}}", "like"]
            }
          }
        },
        {
          "name": "Unlike Song Request",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}/song-requests/{{songRequestId}}/like",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}", "song-requests", "{{songRequestId}}", "like"]
            }
          }
        },
        {
          "name": "Approve Song Request (Manager/Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"priority\": 9\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}/song-requests/{{songRequestId}}/approve",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}", "song-requests", "{{songRequestId}}", "approve"]
            }
          }
        },
        {
          "name": "Reject Song Request (Manager/Admin)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reason\": \"Inappropriate content\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}/song-requests/{{songRequestId}}/reject",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}", "song-requests", "{{songRequestId}}", "reject"]
            }
          }
        },
        {
          "name": "Get Event Queue (Manager/Admin)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}/song-requests/queue",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}", "song-requests", "queue"]
            }
          }
        },
        {
          "name": "Get TimeBombs",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}/song-requests/timebombs",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}", "song-requests", "timebombs"]
            }
          }
        },
        {
          "name": "Get Event Stats (Manager/Admin)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}/song-requests/stats",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}", "song-requests", "stats"]
            }
          }
        },
        {
          "name": "Delete Song Request",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/events/{{eventId}}/song-requests/{{songRequestId}}",
              "host": ["{{baseUrl}}"],
              "path": ["events", "{{eventId}}", "song-requests", "{{songRequestId}}"]
            }
          }
        }
      ]
    }
  ]
}